plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.36.0'
}

bootRun.enabled = false
bootJar.enabled = false
bootBuildImage.enabled = false

subprojects {
    java {
        sourceCompatibility = '17'
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.palantir.docker'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // kafka
        implementation 'org.springframework.kafka:spring-kafka'

        // swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

        // tests
        testImplementation 'com.tngtech.archunit:archunit:1.0.1'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    docker {
        println(tasks.bootJar.outputs.files)
        name rootProject.name + '-' + project.name + ":" + version
        dockerfile file('./Dockerfile')
        files tasks.bootJar.outputs.files
        buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
    }
}
